{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","defaultSelection","indexOf","useState","selectedGood","setSelectedGood","toString","selectedTr","setSelectedTr","clearHandler","className","type","onClick","map","good","index","e","currTarget","currentTarget","closest","selectedItem","dataset","selected","AddSelectHandler","ReactDOM","render","document","getElementById"],"mappings":"qNAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,IACMC,EAAmBF,EAAMG,QADX,OAEpB,EAAwCC,mBAFpB,OAEpB,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAwBF,EAAiBK,YAA7E,mBAAOC,EAAP,KAAmBC,EAAnB,KAUMC,EAAe,WACnBD,EAAc,MACdH,EAAgB,KAGlB,OACE,uBAAMK,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGN,EAAY,UACRA,EADQ,oCAOZA,GACC,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAMH,UAKrB,uBAAOC,UAAU,QAAjB,SACE,gCACGX,EAAMc,KAAI,SAACC,EAAMC,GAAP,OACT,qBACA,UAAQ,OACG,gBAAeA,EACxBL,UAAWK,EAAMT,aAAeC,EAAa,+BAAiC,GAHhF,UAKGQ,EAAMT,aAAeC,EACpB,6BACE,wBACE,UAAQ,eACRI,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAMH,KAJjB,iBAUF,6BACE,wBACE,UAAQ,YACRE,KAAK,SACLD,UAAU,SACVE,QAAS,SAACI,GAAD,OA3DF,SAACA,EAAqBF,GAC7C,IAAMG,EAAaD,EAAEE,cAAcC,QAAQ,MAC3C,GAAIF,EAAY,CACd,IAAMG,EAAeH,EAAWI,QAAQC,UAAY,KACpDd,EAAcY,GAEhBf,EAAgBS,GAqDgBS,CAAiBP,EAAGF,IAJtC,iBAYJ,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MA7BAA,cC3DjBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d3fef90.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const defaultGood = 'Jam';\n  const defaultSelection = goods.indexOf(defaultGood);\n  const [selectedGood, setSelectedGood] = useState(defaultGood);\n  const [selectedTr, setSelectedTr] = useState<string | null>(defaultSelection.toString());\n  const AddSelectHandler = (e: React.MouseEvent, good: string) => {\n    const currTarget = e.currentTarget.closest('tr');\n    if (currTarget) {\n      const selectedItem = currTarget.dataset.selected || null;\n      setSelectedTr(selectedItem);\n    }\n    setSelectedGood(good);\n  };\n\n  const clearHandler = () => {\n    setSelectedTr(null);\n    setSelectedGood('');\n  };\n\n  return (\n    <main className=\"section container\">\n      <h1 className=\"title is-flex is-align-items-center\">\n        {selectedGood ? (\n          `${selectedGood} is selected`\n        ) : (\n          `No goods selected`\n        )}\n\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        {selectedGood && (\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            onClick={() => clearHandler()}\n          />\n        )}\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map((good, index) => (\n            <tr\n            data-cy=\"Good\"\n            key={good} data-selected={index}\n              className={index.toString() === selectedTr ? 'has-background-success-light' : ''}\n            >\n              {index.toString() === selectedTr ? (\n                <td>\n                  <button\n                    data-cy=\"RemoveButton\"\n                    type=\"button\"\n                    className=\"button is-info\"\n                    onClick={() => clearHandler()}\n                  >\n                    -\n                  </button>\n                </td>\n              ) : (\n                <td>\n                  <button\n                    data-cy=\"AddButton\"\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={(e) => AddSelectHandler(e, good)}\n                      >\n                    +\n                  </button>\n              </td>\n              )}\n\n\n              <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                {good}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}